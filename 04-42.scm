(define (distinct? l)
  (if (null? l) true
      (and (distinct? (cdr l))
	   (not (memq (car l) (cdr l))))))

(define (xor p q)
    (or (and p (not q))
        (and (not p) q)))

(define (liars)
  (let ((betty (amb 1 2 3 4 5))
        (ethel (amb 1 2 3 4 5))
        (joan (amb 1 2 3 4 5))
        (kitty (amb 1 2 3 4 5))
        (mary (amb 1 2 3 4 5)))
    (require
     (distinct? (list betty ethel joan kitty mary)))
    (require (xor (= kitty 2)
                  (= betty 3)))
    (require (xor (= ethel 1)
                  (= joan 2)))
    (require (xor (= joan 3)
                  (= ethel 5)))
    (require (xor (= kitty 2)
                  (= mary 4)))
    (require (xor (= mary 4)
                  (= betty 1)))
    (list (list 'Betty betty)
          (list 'Ethel ethel)
          (list 'Joan joan)
          (list 'Kitty kitty)
          (list 'Mary mary))))

